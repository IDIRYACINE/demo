package Robots;

import Monitors.IRobotsMonitor;

public class AssembalgeRobot extends Thread {
    private static IRobotsMonitor monitor ;
    private static int numberOfProjectedProduction = 499;
    private static int producedPieces = 0;

    private int pieceType;
    private String ROBOT_NAME;

    public AssembalgeRobot(IRobotsMonitor threadMonitor, int pieceType , String robotName) {
        monitor = threadMonitor;
        this.pieceType = pieceType;
        ROBOT_NAME = robotName;
    }

    @Override
    public void run() {
        while (producedPieces <numberOfProjectedProduction ){
            monitor.acquireMutexPermission();
            if (!monitor.isPieaceAvaillable(PiecesRegistre.getPieceAcode())){
                monitor.awaitPiece(PiecesRegistre.getPieceAcode());
                if (!monitor.isPieaceAvaillable(PiecesRegistre.getPieceBcode())){
                    monitor.awaitPiece(PiecesRegistre.getPieceBcode());
                }
            }
            monitor.stockNewPiece(pieceType);
            producedPieces++;
            System.out.println("Robot "+ ROBOT_NAME + " Produced "+ PiecesRegistre.getPieceName(pieceType) + ": " + producedPieces);
            monitor.releaseMutexPermission();
        }
    }

    
}
