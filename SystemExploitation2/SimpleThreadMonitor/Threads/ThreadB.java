package SystemExploitation2.SimpleThreadMonitor.Threads;

import SystemExploitation2.SimpleThreadMonitor.ThreadMonitor;

public class ThreadB extends Thread implements ISimpleThread{
    private static int internalValue = 0;
    private static int iteration = 0;
    private final int NUMBER_OF_ITERATIONS;
    private final String THREAD_NAME;
    private final ThreadMonitor monitor;
    
    public ThreadB(int numberOfIterations, String threadName){
        NUMBER_OF_ITERATIONS = numberOfIterations;
        THREAD_NAME = threadName;
        monitor = ThreadMonitor.getInstance();
    }

    @Override
    public void run() {
        while(iteration < NUMBER_OF_ITERATIONS){
            monitor.acquireMutexPermissions();
            if(monitor.checkBworkCondition()){
                internalValue++;
                iteration++;                
                System.out.println(THREAD_NAME + " : " + internalValue);
            }
            monitor.releaseMutexPermissions();
        }
    }

    @Override
    public int getInternalValue() {
        return internalValue;
    }

    
    
}
